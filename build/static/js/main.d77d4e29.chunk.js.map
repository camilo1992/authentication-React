{"version":3,"sources":["components/Profile/ProfileForm.module.css","components/Layout/MainNavigation.module.css","components/Profile/UserProfile.module.css","components/StartingPage/StartingPageContent.module.css","store/auth-context.js","components/Layout/MainNavigation.js","components/Layout/Layout.js","components/Profile/ProfileForm.js","components/Profile/UserProfile.js","components/Auth/AuthForm.js","pages/AuthPage.js","components/StartingPage/StartingPageContent.js","pages/HomePage.js","App.js","index.js","components/Auth/AuthForm.module.css"],"names":["module","exports","logOutTimer","AuthContext","React","createContext","token","isLoggedIn","logIn","logOut","calculateRemainingTime","expirationTime","currentTime","Date","getTime","AuthContextProvider","props","initialToken","tokenData","storedToken","localStorage","getItem","storedTime","remainingTime","removeItem","duration","retrieveRemainingTime","useState","setToken","userIsLoggedIn","logOutHandler","useCallback","clearTimeout","useEffect","console","log","setTimeout","contextValue","setItem","Provider","value","children","MainNavigation","authCtx","useContext","history","useHistory","className","classes","header","to","logo","onClick","replace","Layout","ProfileForm","changePaasswordInput","useRef","form","onSubmit","e","preventDefault","enteredNewPassword","current","fetch","method","body","JSON","stringify","idToken","password","retrunSecureToken","headers","then","res","control","htmlFor","type","id","ref","action","UserProfile","profile","AuthForm","isLogin","setIsLogin","isSending","setIsSending","emailInputRef","passwordInputRef","auth","url","enteredEmail","enteredPassword","email","returnSecureToken","ok","json","data","Error","expiresIn","toISOString","catch","err","required","actions","toggle","prevState","AuthPage","StartingPageContent","starting","HomePage","App","authctx","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d77d4e29.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileForm_form__2_4HY\",\"control\":\"ProfileForm_control__slthu\",\"action\":\"ProfileForm_action__37kaP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__3DSKb\",\"logo\":\"MainNavigation_logo__2_ARm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__RTn-G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"starting\":\"StartingPageContent_starting__1G20p\"};","import React, { useCallback, useEffect, useState } from \"react\";\r\nlet logOutTimer;\r\nconst AuthContext = React.createContext({\r\n  token: \"\",\r\n  isLoggedIn: false,\r\n  logIn: (token) => {},\r\n  logOut: () => {},\r\n});\r\n\r\nconst calculateRemainingTime = (expirationTime) => {\r\n  const currentTime = new Date().getTime();\r\n  const adjExirationTime = new Date(expirationTime);\r\n  const remainingDuration = adjExirationTime - currentTime;\r\n  return remainingDuration;\r\n};\r\n\r\nconst retrieveRemainingTime = () => {\r\n  const storedToken = localStorage.getItem(\"token\");\r\n  const storedTime = localStorage.getItem(\"expirationTime\");\r\n\r\n  const remainingTime = calculateRemainingTime(storedTime);\r\n\r\n  if (remainingTime <= 60000) {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"expirationTime\");\r\n    return null;\r\n  }\r\n\r\n  return { token: storedToken, duration: remainingTime };\r\n};\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  let initialToken;\r\n  const tokenData = retrieveRemainingTime();\r\n\r\n  if (tokenData) {\r\n    initialToken = tokenData.token;\r\n  }\r\n\r\n  const [token, setToken] = useState(initialToken);\r\n  const userIsLoggedIn = !!token;\r\n\r\n  const logOutHandler = useCallback(() => {\r\n    setToken(null);\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"expirationTime\");\r\n\r\n    if (logOutTimer) {\r\n      clearTimeout(logOutTimer);\r\n    }\r\n  }, []);\r\n\r\n  const logInHandler = (token, expirationTime) => {\r\n    setToken(token);\r\n    localStorage.setItem(\"token\", token);\r\n    localStorage.setItem(\"expirationTime\", expirationTime);\r\n\r\n    const remainingTime = calculateRemainingTime(expirationTime);\r\n    logOutTimer = setTimeout(logOutHandler, remainingTime);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (tokenData) {\r\n      console.log(tokenData.duration);\r\n      logOutTimer = setTimeout(logOutHandler, tokenData.duration);\r\n    }\r\n  }, [tokenData, logOutHandler]);\r\n\r\n  const contextValue = {\r\n    token: token,\r\n    isLoggedIn: userIsLoggedIn,\r\n    logIn: logInHandler,\r\n    logOut: logOutHandler,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n","import { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport AuthContext from \"../../store/auth-context\";\n\nimport classes from \"./MainNavigation.module.css\";\n\nconst MainNavigation = () => {\n  const authCtx = useContext(AuthContext);\n  const isLoggedIn = authCtx.isLoggedIn;\n  const history = useHistory();\n\n  const logOutHandler = () => {\n    authCtx.logOut();\n    history.replace(\"/auth\");\n  };\n\n  return (\n    <header className={classes.header}>\n      <Link to=\"/\">\n        <div className={classes.logo}>React Auth</div>\n      </Link>\n      <nav>\n        <ul>\n          {!isLoggedIn && (\n            <li>\n              <Link to=\"/auth\">Login</Link>\n            </li>\n          )}\n          {isLoggedIn && (\n            <li>\n              <Link to=\"/profile\">Profile</Link>\n            </li>\n          )}\n          {isLoggedIn && (\n            <li>\n              <button onClick={logOutHandler}>Logout</button>\n            </li>\n          )}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import { Fragment } from 'react';\n\nimport MainNavigation from './MainNavigation';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { useContext, useRef } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport AuthContext from \"../../store/auth-context\";\nimport classes from \"./ProfileForm.module.css\";\n\nconst ProfileForm = () => {\n  const changePaasswordInput = useRef();\n  const authCtx = useContext(AuthContext);\n  const history = useHistory();\n\n  const changePasswordHandler = (e) => {\n    e.preventDefault();\n    const enteredNewPassword = changePaasswordInput.current.value;\n    fetch(\n      \"https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyDPCFYMmmmAaxq2y7HyrWFCAjq8sw0UF2I\",\n      {\n        method: \"POST\",\n        body: JSON.stringify({\n          idToken: authCtx.token,\n          password: enteredNewPassword,\n          retrunSecureToken: false,\n        }),\n        headers: { \"Content-Type\": \"application/json\" },\n      }\n    ).then((res) => {\n      history.replace(\"/\");\n    });\n  };\n  return (\n    <form className={classes.form} onSubmit={changePasswordHandler}>\n      <div className={classes.control}>\n        <label htmlFor=\"new-password\">New Password</label>\n        <input type=\"password\" id=\"new-password\" ref={changePaasswordInput} />\n      </div>\n      <div className={classes.action}>\n        <button>Change Password</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ProfileForm;\n","import ProfileForm from './ProfileForm';\nimport classes from './UserProfile.module.css';\n\nconst UserProfile = () => {\n  return (\n    <section className={classes.profile}>\n      <h1>Your User Profile</h1>\n      <ProfileForm />\n    </section>\n  );\n};\n\nexport default UserProfile;\n","import { useState, useRef, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport AuthContext from \"../../store/auth-context\";\n\nimport classes from \"./AuthForm.module.css\";\n\nconst AuthForm = () => {\n  const [isLogin, setIsLogin] = useState(true);\n  const [isSending, setIsSending] = useState(false);\n\n  const authCtx = useContext(AuthContext);\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const history = useHistory();\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    setIsSending(true);\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    let url;\n\n    if (isLogin) {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDPCFYMmmmAaxq2y7HyrWFCAjq8sw0UF2I\";\n    } else {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDPCFYMmmmAaxq2y7HyrWFCAjq8sw0UF2I\";\n    }\n\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true,\n      }),\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((res) => {\n        setIsSending(false);\n        if (res.ok) {\n          // ...........\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            let message = \"Authentication failed !\";\n            // if (data && data.error && data.error.message) {\n            //   message = data.error.message;\n            // }\n            throw new Error(message);\n          });\n        }\n      })\n      .then((data) => {\n        const expirationTime = new Date(\n          new Date().getTime() + +data.expiresIn * 1000\n        );\n        authCtx.logIn(data.idToken, expirationTime.toISOString());\n        history.replace(\"/\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input type=\"email\" id=\"email\" required ref={emailInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            required\n            ref={passwordInputRef}\n          />\n        </div>\n        <div className={classes.actions}>\n          {!isSending ? (\n            <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\n          ) : (\n            \"Sending Request ...\"\n          )}\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from '../components/Auth/AuthForm';\n\nconst AuthPage = () => {\n  return <AuthForm />;\n};\n\nexport default AuthPage;\n","import classes from './StartingPageContent.module.css';\n\nconst StartingPageContent = () => {\n  return (\n    <section className={classes.starting}>\n      <h1>Welcome on Board!</h1>\n    </section>\n  );\n};\n\nexport default StartingPageContent;\n","import StartingPageContent from '../components/StartingPage/StartingPageContent';\n\nconst HomePage = () => {\n  return <StartingPageContent />;\n};\n\nexport default HomePage;\n","import { useContext } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport Layout from \"./components/Layout/Layout\";\nimport UserProfile from \"./components/Profile/UserProfile\";\nimport AuthPage from \"./pages/AuthPage\";\nimport HomePage from \"./pages/HomePage\";\nimport AuthContext from \"./store/auth-context\";\n\nfunction App() {\n  const authctx = useContext(AuthContext);\n\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" exact>\n          <HomePage />\n        </Route>\n        <Route path=\"/auth\">\n          <AuthPage />\n        </Route>\n        <Route path=\"/profile\">\n          {authctx.isLoggedIn && <UserProfile />}\n          {!authctx.isLoggedIn && <Redirect to=\"/\" />}\n        </Route>\n        <Route path=\"*\">\n          <Redirect to=\"/\" />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport { AuthContextProvider } from \"./store/auth-context\";\n\nReactDOM.render(\n  <AuthContextProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AuthContextProvider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"AuthForm_auth__JXc0h\",\"control\":\"AuthForm_control__kYBtm\",\"actions\":\"AuthForm_actions__2jNr6\",\"toggle\":\"AuthForm_toggle__mcfeG\"};"],"sourceRoot":""}